{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"u",
				"unique"
			],
			[
				"file",
				"filename"
			],
			[
				"has",
				"hasOwnProperty"
			],
			[
				"diff",
				"difference"
			],
			[
				"comp",
				"compareImages"
			],
			[
				"insert",
				"insertRow"
			],
			[
				"Math",
				"Math.floor( x: number ): number\tMath"
			],
			[
				"tot",
				"totalTime"
			],
			[
				"movie",
				"movies"
			],
			[
				"sta",
				"startTime"
			],
			[
				"movies",
				"movies_imdb"
			],
			[
				"moive",
				"movies"
			],
			[
				"save",
				"saveImage"
			],
			[
				"getIma",
				"getImages"
			],
			[
				"dis",
				"distance"
			],
			[
				"le",
				"length"
			],
			[
				"inde",
				"indexMovie"
			],
			[
				"image",
				"imageOrientation = ''\tStyle CSS"
			],
			[
				"for",
				"forEach"
			],
			[
				"imdb_photo",
				"imdb_photo_errors"
			],
			[
				"meid",
				"mediaLinks"
			],
			[
				"res",
				"result"
			],
			[
				"table",
				"tableName"
			],
			[
				"parse",
				"parseMediaPage"
			],
			[
				"getMo",
				"getMoviesFromDb"
			],
			[
				"media",
				"mediaLinks"
			],
			[
				"medi",
				"mediaLinks"
			],
			[
				"med",
				"mediaLinks"
			],
			[
				"each",
				"forEach"
			],
			[
				"console",
				"console.log()"
			],
			[
				"cl",
				"close(): void\tEventSource"
			],
			[
				"fun",
				"function"
			],
			[
				"re",
				"response\tXMLHttpRequest"
			],
			[
				"P",
				"Posterhash"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app.js",
			"settings":
			{
				"buffer_size": 1360,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "download-artwork-imdb.js",
			"settings":
			{
				"buffer_size": 2075,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "download-artwork-imdb-poster.js",
			"settings":
			{
				"buffer_size": 2110,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "var vo = require('vo');\nvar fs = require('fs');\nvar sqlite3 = require('sqlite3').verbose();\nvar Nightmare = require('nightmare');\n\nvo(run)(function(err, result) {\n    if (err) throw err;\n});\n\nfunction * run() {\n\n\tvar dbResults = new sqlite3.Database('data/results.sqlite');\n\tvar mediaLinksTable = \"imdb_media_results\";\n\tvar allRows = [];\n\tvar index = 0;\n\n\tfunction parseMediaPage(rows)\n\t{\n\t\tvar nightmare = Nightmare();\n\t\tvar row = (rows != undefined && rows.length > 0) ? rows[0] : allRows[index++];\n\n\t\tconsole.log(row.id + \": \" + row.url);\n\t\tnightmare.goto(row.url)\n\t\t.wait('#photo-container')\n\t\t.wait(2000)\n\t\t.evaluate(function(row) {\n\t\t\tvar image = {};\n\t\t\t$('.pswp__item img:visible').each(function(idx, item){\n\n\t\t\t\tif (/display/.test($(this).attr(\"style\")))\n\t\t\t\t{\n\t\t\t\t\timage.id = row.id;\n\t\t\t\t\timage.url = $(this).attr(\"src\");\n\t\t\t\t\timage.idx = row.idx;\n\t\t\t\t\timage.imdb = row.imdb;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn image;\n\t\t}, row)\n\t\t.end()\n\t\t.then(function(image){\n\n\t\t\tinsertRow(image);\n\t\t\tif (index < allRows.length) parseMediaPage();\n\t\t\t//else dbResults.close();\n\t\t})\n\t\t.catch(function(error) {\n\t\t\tconsole.error('error', error);\n\t\t\tinsertError(row, error);\n\t\t\tif (allRows.length > 0) parseMediaPage();\n\t\t});\n\t}\n\n\tfunction getMoviesFromDb()\n\t{\n\t\tdbResults.serialize(function() {\n\t\t\tdbResults.all(\"SELECT id, imdb, idx, url FROM \" + mediaLinksTable + \" WHERE id > 328\" , function(err, rows) {\n\t\t\t\tallRows = rows;\n\t\t\t\tif (allRows.length > 0) parseMediaPage();\n\t\t\t});\n\t\t});\n\t}\n\n\t\n\n\tfunction getErrorsFromDb()\n\t{\n\t\tvar errorTable = \"imdb_photo_errors\";\n\t\tdbResults.serialize(function() {\n\t\t\tdbResults.each(\"SELECT id, imdb, p_id FROM \" + errorTable, function(err, row) {\n\n\t\t\t\tdbResults.serialize(function() {\n\t\t\t\t\tconsole.log(row);\n\t\t\t\t\tdbResults.all(\"SELECT id, imdb, idx, url FROM \" + mediaLinksTable + \" WHERE id = \" + row.p_id , function(err, rows) {\n\t\t\t\t\t\tconsole.log(rows.length + \" : \" + allRows.length);\n\t\t\t\t\t\t//allRows.concat(rows);\n\t\t\t\t\t\tif (rows.length > 0) parseMediaPage(rows);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction insertRow(row)\n\t{\n\t\tvar tableName = \"imdb_photo_results\";\n\n\t\tdbResults.serialize(function() {\n\n\t\t  var stmt = dbResults.prepare(\"REPLACE INTO \"+tableName+\" (id, imdb, idx, url) VALUES ($id, $imdb, $index, $url)\", {\n\t\t  \t$id : row.id;\n\t\t  \t$imdb : row.imdb,\n\t\t  \t$index : row.idx,\n\t\t  \t$url : row.url\n\t\t  });\n\n\t\t  stmt.run();\n\t\t  stmt.finalize();\n\n\t\t});\t\t\n\t}\n\n\tfunction insertError(row, error)\n\t{\n\t\tvar tableName = \"imdb_photo_errors\";\n\n\t\tdbResults.serialize(function() {\n\n\t\t  var stmt = dbResults.prepare(\"INSERT INTO \"+tableName+\" (imdb, p_id, error) VALUES ($imdb, $p_id, $error)\", {\n\t\t  \t$imdb : row.imdb,\n\t\t  \t$p_id : row.id,\n\t\t  \t$error : error\n\t\t  });\n\n\t\t  stmt.run();\n\t\t  stmt.finalize();\n\n\t\t});\t\t\n\t}\n\n\t//getMoviesFromDb();\n\t//getErrorsFromDb();\n}",
			"file": "scrape-imdb-media-links.js",
			"file_size": 2899,
			"file_write_time": 131264405781504857,
			"settings":
			{
				"buffer_size": 2782,
				"line_ending": "Windows"
			}
		},
		{
			"file": "filter-imdb-poster.js",
			"settings":
			{
				"buffer_size": 1111,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "filter-equal-images.js",
			"settings":
			{
				"buffer_size": 3913,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "data/sql.txt",
			"settings":
			{
				"buffer_size": 378,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "generate-colors-imdb.js",
			"settings":
			{
				"buffer_size": 1593,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Nodejs-Projekte/movie-mining/public",
		"/D/Nodejs-Projekte/movie-mining/public/javascripts",
		"/D/Nodejs-Projekte/movie-mining/routes",
		"/D/Nodejs-Projekte/movie-mining/views",
		"/D/Nodejs-Projekte/movie-mining/data"
	],
	"file_history":
	[
		"/D/Nodejs-Projekte/movie-mining/download-artwork-omdbapi.js",
		"/D/Nodejs-Projekte/movie-mining/download-artwork-movieposterdb.js",
		"/D/Nodejs-Projekte/movie-mining/scrape-imdb.js",
		"/D/Nodejs-Projekte/movie-mining/scrape-posterdb.js",
		"/D/Nodejs-Projekte/movie-mining/update-imdb-omdbapi.js",
		"/D/Nodejs-Projekte/movie-mining/download-artwork-imdb.js",
		"/D/Nodejs-Projekte/movie-mining/data/generate-colors-imdb.js",
		"/D/Nodejs-Projekte/movie-mining/scrape-artwork-download.js",
		"/D/Nodejs-Projekte/movie-mining/views/layout.jade",
		"/D/Nodejs-Projekte/movie-mining/data/movies.json",
		"/D/Nodejs-Projekte/movie-mining/data/movie.json",
		"/D/Nodejs-Projekte/movie-mining/views/index.jade",
		"/D/Nodejs-Projekte/movie-mining/parse-imdb-list.js",
		"/D/Nodejs-Projekte/movie-mining/public/javascripts/main.js",
		"/D/Nodejs-Projekte/movie-scraper/.gitignore",
		"/D/Nodejs-Projekte/IMDB-Scraper/data/.gitignore",
		"/D/Nodejs-Projekte/IMDB-Scraper/data/german-aka-titles.list",
		"/D/Nodejs-Projekte/IMDB-Scraper/public/javascripts/main.js",
		"/C/Users/Henning/AppData/Roaming/Sublime Text 3/Packages/User/SublimeGit.sublime-settings",
		"/D/Nodejs-Projekte/Imdb-Scraper/src/main.js"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"insertRow"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1360,
						"regions":
						{
						},
						"selection":
						[
							[
								880,
								880
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "download-artwork-imdb.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2075,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2075
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "download-artwork-imdb-poster.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2110,
						"regions":
						{
						},
						"selection":
						[
							[
								1879,
								1538
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 525.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "scrape-imdb-media-links.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2782,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2782
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 105.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "filter-imdb-poster.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1111,
						"regions":
						{
						},
						"selection":
						[
							[
								284,
								284
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "filter-equal-images.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3913,
						"regions":
						{
						},
						"selection":
						[
							[
								821,
								821
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "data/sql.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 378,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "generate-colors-imdb.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1593,
						"regions":
						{
						},
						"selection":
						[
							[
								637,
								637
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 261.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.nodejs":
	{
		"height": 235.0
	},
	"pinned_build_system": "Packages/Nodejs/Nodejs.sublime-build",
	"project": "movie-mining.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 196.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 246.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
